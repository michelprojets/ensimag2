#include <inttypes.h>
#include <malloc.c.h>

#ifndef __PROCESSUS_H__
#define __PROCESSUS_H__

#define NB_REGISTRES_TO_SAVE 5
#define EXEC_STACK_SIZE 512
#define NB_PROCS 8

typedef enum ETAT{
    ELU = 0,
    ELLIGIBLE,
    SLEEPING
} ETAT;

struct Processus;

typedef struct Processus{
    uint32_t pid;
    char * nom;
    ETAT etat;
    uint32_t * save_registers;
    uint32_t * exec_stack;
    struct Processus * suivant;
} Processus;

/* une file (FIFO) de processus */
typedef struct File{
    Processus * tete;
    Processus * queue;
} File;

Processus ** processus_table; // la table des processus

File * file_activables;  // la file des processus activables

uint32_t nb_procs_crees;  // le nombre de processus qui ont ete crees (et qui ne sont pas encore temines)

Processus * proc_elu; // pointeur vers le processus (invariant : pid = indice dans la table)

extern void idle();

extern void init_processus();

#endif
