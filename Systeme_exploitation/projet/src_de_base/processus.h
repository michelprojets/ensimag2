#include <inttypes.h>

#ifndef __PROCESSUS_H__
#define __PROCESSUS_H__

#define NB_REGISTRES_TO_SAVE 5
#define EXEC_STACK_SIZE 512
#define NB_PROCS 2

typedef enum ETAT{
    ELU = 0,
    ELLIGIBLE,
    SLEEPING
} ETAT;

typedef struct Processus{
    uint32_t pid;
    char * nom;
    ETAT etat;
    uint32_t save_registers[NB_REGISTRES_TO_SAVE];
    uint32_t exec_stack[EXEC_STACK_SIZE];
} Processus;

Processus processus_table[NB_PROCS];

Processus * proc_elu; // pointeur vers le processus (invariant : pid = indice dans la table)

typedef struct Circle_list{
    Processus courant;
    Processus suivant;
} Circle_list;

extern void idle();

extern void init_processus();

#endif
